"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var router_1 = require("nativescript-angular/router");
var routes = [
    { path: "", redirectTo: "/personal", pathMatch: "full" },
    { path: "home", loadChildren: "./components/home/home.module#HomeModule" },
    { path: "finish", loadChildren: "./components/finish/finish.module#FinishModule" },
    { path: "review", loadChildren: "./components/review/review.module#ReviewModule" },
    { path: "director/:id", loadChildren: "./components/director/director.module#DirectorModule" },
    { path: "newdirector", loadChildren: "./components/newdirector/newdirector.module#NewDirectorModule" },
    { path: "personal", loadChildren: "./components/personal/personal.module#PersonalModule" },
    { path: "details", loadChildren: "./components/details/details.module#DetailsModule" },
    { path: "bank", loadChildren: "./components/bank/bank.module#BankModule" },
    { path: "payment", loadChildren: "./components/payment/payment.module#PaymentModule" },
    { path: "manage", loadChildren: "./components/manage/manage.module#ManageModule" },
    { path: "status/:id", loadChildren: "./components/status/status.module#StatusModule" },
    { path: "application/:id", loadChildren: "./components/application/application.module#ApplicationModule" },
    { path: "fileupload", loadChildren: "./components/fileupload/fileupload.module#FileuploadModule" }
];
var AppRoutingModule = /** @class */ (function () {
    function AppRoutingModule() {
    }
    AppRoutingModule = __decorate([
        core_1.NgModule({
            imports: [router_1.NativeScriptRouterModule.forRoot(routes)],
            exports: [router_1.NativeScriptRouterModule]
        })
    ], AppRoutingModule);
    return AppRoutingModule;
}());
exports.AppRoutingModule = AppRoutingModule;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLXJvdXRpbmcubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLXJvdXRpbmcubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQXlDO0FBRXpDLHNEQUF1RTtBQUV2RSxJQUFNLE1BQU0sR0FBVztJQUNuQixFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFO0lBQzNELEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsMENBQTBDLEVBQUU7SUFDMUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxnREFBZ0QsRUFBRTtJQUNsRixFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFLGdEQUFnRCxFQUFFO0lBQ2xGLEVBQUUsSUFBSSxFQUFFLGNBQWMsRUFBRSxZQUFZLEVBQUUsc0RBQXNELEVBQUU7SUFDOUYsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSwrREFBK0QsRUFBRTtJQUN0RyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLHNEQUFzRCxFQUFFO0lBQzFGLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsbURBQW1ELEVBQUU7SUFDdEYsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSwwQ0FBMEMsRUFBRTtJQUMxRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLG1EQUFtRCxFQUFFO0lBQ3RGLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxZQUFZLEVBQUUsZ0RBQWdELEVBQUU7SUFDbEYsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxnREFBZ0QsRUFBRTtJQUN0RixFQUFFLElBQUksRUFBRSxpQkFBaUIsRUFBRSxZQUFZLEVBQUUsK0RBQStELEVBQUU7SUFDMUcsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSw0REFBNEQsRUFBRTtDQUNsRyxDQUFDO0FBTUY7SUFBQTtJQUFnQyxDQUFDO0lBQXBCLGdCQUFnQjtRQUo1QixlQUFRLENBQUM7WUFDTixPQUFPLEVBQUUsQ0FBQyxpQ0FBd0IsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDbkQsT0FBTyxFQUFFLENBQUMsaUNBQXdCLENBQUM7U0FDdEMsQ0FBQztPQUNXLGdCQUFnQixDQUFJO0lBQUQsdUJBQUM7Q0FBQSxBQUFqQyxJQUFpQztBQUFwQiw0Q0FBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IFJvdXRlcyB9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcclxuaW1wb3J0IHsgTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlIH0gZnJvbSBcIm5hdGl2ZXNjcmlwdC1hbmd1bGFyL3JvdXRlclwiO1xyXG5cclxuY29uc3Qgcm91dGVzOiBSb3V0ZXMgPSBbXHJcbiAgICB7IHBhdGg6IFwiXCIsIHJlZGlyZWN0VG86IFwiL3BlcnNvbmFsXCIsIHBhdGhNYXRjaDogXCJmdWxsXCIgfSxcclxuXHR7IHBhdGg6IFwiaG9tZVwiLCBsb2FkQ2hpbGRyZW46IFwiLi9jb21wb25lbnRzL2hvbWUvaG9tZS5tb2R1bGUjSG9tZU1vZHVsZVwiIH0sXHJcblx0eyBwYXRoOiBcImZpbmlzaFwiLCBsb2FkQ2hpbGRyZW46IFwiLi9jb21wb25lbnRzL2ZpbmlzaC9maW5pc2gubW9kdWxlI0ZpbmlzaE1vZHVsZVwiIH0sXHJcblx0eyBwYXRoOiBcInJldmlld1wiLCBsb2FkQ2hpbGRyZW46IFwiLi9jb21wb25lbnRzL3Jldmlldy9yZXZpZXcubW9kdWxlI1Jldmlld01vZHVsZVwiIH0sXHJcblx0eyBwYXRoOiBcImRpcmVjdG9yLzppZFwiLCBsb2FkQ2hpbGRyZW46IFwiLi9jb21wb25lbnRzL2RpcmVjdG9yL2RpcmVjdG9yLm1vZHVsZSNEaXJlY3Rvck1vZHVsZVwiIH0sXHJcblx0eyBwYXRoOiBcIm5ld2RpcmVjdG9yXCIsIGxvYWRDaGlsZHJlbjogXCIuL2NvbXBvbmVudHMvbmV3ZGlyZWN0b3IvbmV3ZGlyZWN0b3IubW9kdWxlI05ld0RpcmVjdG9yTW9kdWxlXCIgfSxcclxuXHR7IHBhdGg6IFwicGVyc29uYWxcIiwgbG9hZENoaWxkcmVuOiBcIi4vY29tcG9uZW50cy9wZXJzb25hbC9wZXJzb25hbC5tb2R1bGUjUGVyc29uYWxNb2R1bGVcIiB9LFxyXG5cdHsgcGF0aDogXCJkZXRhaWxzXCIsIGxvYWRDaGlsZHJlbjogXCIuL2NvbXBvbmVudHMvZGV0YWlscy9kZXRhaWxzLm1vZHVsZSNEZXRhaWxzTW9kdWxlXCIgfSxcclxuXHR7IHBhdGg6IFwiYmFua1wiLCBsb2FkQ2hpbGRyZW46IFwiLi9jb21wb25lbnRzL2JhbmsvYmFuay5tb2R1bGUjQmFua01vZHVsZVwiIH0sXHJcblx0eyBwYXRoOiBcInBheW1lbnRcIiwgbG9hZENoaWxkcmVuOiBcIi4vY29tcG9uZW50cy9wYXltZW50L3BheW1lbnQubW9kdWxlI1BheW1lbnRNb2R1bGVcIiB9LFxyXG5cdHsgcGF0aDogXCJtYW5hZ2VcIiwgbG9hZENoaWxkcmVuOiBcIi4vY29tcG9uZW50cy9tYW5hZ2UvbWFuYWdlLm1vZHVsZSNNYW5hZ2VNb2R1bGVcIiB9LFxyXG5cdHsgcGF0aDogXCJzdGF0dXMvOmlkXCIsIGxvYWRDaGlsZHJlbjogXCIuL2NvbXBvbmVudHMvc3RhdHVzL3N0YXR1cy5tb2R1bGUjU3RhdHVzTW9kdWxlXCIgfSxcclxuXHR7IHBhdGg6IFwiYXBwbGljYXRpb24vOmlkXCIsIGxvYWRDaGlsZHJlbjogXCIuL2NvbXBvbmVudHMvYXBwbGljYXRpb24vYXBwbGljYXRpb24ubW9kdWxlI0FwcGxpY2F0aW9uTW9kdWxlXCIgfSxcclxuXHR7IHBhdGg6IFwiZmlsZXVwbG9hZFwiLCBsb2FkQ2hpbGRyZW46IFwiLi9jb21wb25lbnRzL2ZpbGV1cGxvYWQvZmlsZXVwbG9hZC5tb2R1bGUjRmlsZXVwbG9hZE1vZHVsZVwiIH1cclxuXTtcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlLmZvclJvb3Qocm91dGVzKV0sXHJcbiAgICBleHBvcnRzOiBbTmF0aXZlU2NyaXB0Um91dGVyTW9kdWxlXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXBwUm91dGluZ01vZHVsZSB7IH1cclxuIl19