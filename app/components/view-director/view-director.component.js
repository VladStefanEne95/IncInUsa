"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var page_1 = require("ui/page");
var router_1 = require("@angular/router");
var start_service_1 = require("./../../services/start/start.service");
var plugin = require("nativescript-uuid");
var appSettings = require("application-settings");
var ViewDirectorComponent = /** @class */ (function () {
    function ViewDirectorComponent(page, router, _Activatedroute, StartService) {
        this.page = page;
        this.router = router;
        this._Activatedroute = _Activatedroute;
        this.StartService = StartService;
        page.actionBarHidden = true;
        this.page = page;
    }
    ViewDirectorComponent.prototype.ngOnInit = function () {
        var _this = this;
        // Init your component properties here.
        this.uuid = this._Activatedroute.snapshot.params['id'];
        this.id = this._Activatedroute.snapshot.params['id2'];
        this.directors = appSettings.getString("directors", "");
        var directorsObj;
        this.StartService.refreshStatus(this.uuid).subscribe(function (response) {
            _this.directors = response['incorporation'][0].directors;
            _this.directorsArr = JSON.parse(_this.directors);
            _this.firstName = _this.directorsArr[_this.id].firstName;
            _this.lastName = _this.directorsArr[_this.id].lastName;
            _this.email = _this.directorsArr[_this.id].email;
            _this.al1 = _this.directorsArr[_this.id].al1;
            _this.al2 = _this.directorsArr[_this.id].al2;
            _this.city = _this.directorsArr[_this.id].city;
            _this.postal = _this.directorsArr[_this.id].postal;
            _this.country = _this.directorsArr[_this.id].country;
            _this.state = _this.directorsArr[_this.id].state;
        }, function (error) { return console.log(error); });
    };
    ViewDirectorComponent = __decorate([
        core_1.Component({
            selector: "ViewDirector",
            moduleId: module.id,
            templateUrl: "./view-director.component.html"
        }),
        __metadata("design:paramtypes", [page_1.Page, router_1.Router, router_1.ActivatedRoute, start_service_1.StartService])
    ], ViewDirectorComponent);
    return ViewDirectorComponent;
}());
exports.ViewDirectorComponent = ViewDirectorComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlldy1kaXJlY3Rvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ2aWV3LWRpcmVjdG9yLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNDQUF3RTtBQUN4RSxnQ0FBK0I7QUFDL0IsMENBQXlEO0FBQ3pELHNFQUFtRTtBQUVuRSxJQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUM1QyxJQUFJLFdBQVcsR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQztBQU9sRDtJQWtCSSwrQkFBb0IsSUFBVSxFQUFVLE1BQWMsRUFBVSxlQUE4QixFQUFVLFlBQTBCO1FBQTlHLFNBQUksR0FBSixJQUFJLENBQU07UUFBVSxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQVUsb0JBQWUsR0FBZixlQUFlLENBQWU7UUFBVSxpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUNwSSxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztRQUM1QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNmLENBQUM7SUFFRCx3Q0FBUSxHQUFSO1FBQUEsaUJBc0JGO1FBckJBLHVDQUF1QztRQUN2QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2RCxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsU0FBUyxHQUFHLFdBQVcsQ0FBQyxTQUFTLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3hELElBQUksWUFBWSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxTQUFTLENBQ25ELFVBQUEsUUFBUTtZQUNQLEtBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztZQUN4RCxLQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQy9DLEtBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSSxDQUFDLFlBQVksQ0FBQyxLQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDO1lBQ3RELEtBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSSxDQUFDLFlBQVksQ0FBQyxLQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDO1lBQ3BELEtBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSSxDQUFDLFlBQVksQ0FBQyxLQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDO1lBQzlDLEtBQUksQ0FBQyxHQUFHLEdBQUcsS0FBSSxDQUFDLFlBQVksQ0FBQyxLQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDO1lBQzFDLEtBQUksQ0FBQyxHQUFHLEdBQUcsS0FBSSxDQUFDLFlBQVksQ0FBQyxLQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDO1lBQzFDLEtBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSSxDQUFDLFlBQVksQ0FBQyxLQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDO1lBQzVDLEtBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSSxDQUFDLFlBQVksQ0FBQyxLQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDO1lBQ2hELEtBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSSxDQUFDLFlBQVksQ0FBQyxLQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDO1lBQ2xELEtBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSSxDQUFDLFlBQVksQ0FBQyxLQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQy9DLENBQUMsRUFDRCxVQUFBLEtBQUssSUFBSSxPQUFBLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQWxCLENBQWtCLENBQzNCLENBQUM7SUFDSCxDQUFDO0lBN0NXLHFCQUFxQjtRQUxqQyxnQkFBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLGNBQWM7WUFDeEIsUUFBUSxFQUFFLE1BQU0sQ0FBQyxFQUFFO1lBQ25CLFdBQVcsRUFBRSxnQ0FBZ0M7U0FDaEQsQ0FBQzt5Q0FtQjRCLFdBQUksRUFBa0IsZUFBTSxFQUEwQix1QkFBYyxFQUF3Qiw0QkFBWTtPQWxCekgscUJBQXFCLENBK0NqQztJQUFELDRCQUFDO0NBQUEsQUEvQ0QsSUErQ0M7QUEvQ1ksc0RBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsVmlld0NoaWxkLCBFbGVtZW50UmVmIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgUGFnZSB9IGZyb20gXCJ1aS9wYWdlXCI7XHJcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlLCBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5pbXBvcnQgeyBTdGFydFNlcnZpY2UgfSBmcm9tICcuLy4uLy4uL3NlcnZpY2VzL3N0YXJ0L3N0YXJ0LnNlcnZpY2UnXHJcblxyXG5jb25zdCBwbHVnaW4gPSByZXF1aXJlKFwibmF0aXZlc2NyaXB0LXV1aWRcIik7XHJcbnZhciBhcHBTZXR0aW5ncyA9IHJlcXVpcmUoXCJhcHBsaWNhdGlvbi1zZXR0aW5nc1wiKTtcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6IFwiVmlld0RpcmVjdG9yXCIsXHJcbiAgICBtb2R1bGVJZDogbW9kdWxlLmlkLFxyXG4gICAgdGVtcGxhdGVVcmw6IFwiLi92aWV3LWRpcmVjdG9yLmNvbXBvbmVudC5odG1sXCJcclxufSlcclxuZXhwb3J0IGNsYXNzIFZpZXdEaXJlY3RvckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG5cdHV1aWQgOnN0cmluZztcclxuXHRpZCA6bnVtYmVyXHJcblx0Zmlyc3ROYW1lIDpzdHJpbmc7XHJcblx0bGFzdE5hbWUgOnN0cmluZztcclxuXHRlbWFpbCA6c3RyaW5nO1xyXG5cdGFsMSA6c3RyaW5nO1xyXG5cdGFsMiA6c3RyaW5nO1xyXG5cdGNpdHkgOnN0cmluZztcclxuXHRwb3N0YWwgOm51bWJlcjtcclxuXHRjb3VudHJ5IDpzdHJpbmc7XHJcblx0c3RhdGUgOnN0cmluZztcclxuXHRjb21wYW55TmFtZTogc3RyaW5nO1xyXG5cdGNvbXBhbnlUeXBlIDpzdHJpbmc7XHJcblx0ZGlyZWN0b3JzIDphbnk7XHJcblx0ZGlyZWN0b3JzQXJyIDpBcnJheTxhbnk+O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcGFnZTogUGFnZSwgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlciwgcHJpdmF0ZSBfQWN0aXZhdGVkcm91dGU6QWN0aXZhdGVkUm91dGUsIHByaXZhdGUgU3RhcnRTZXJ2aWNlOiBTdGFydFNlcnZpY2UpIHtcclxuXHRcdHBhZ2UuYWN0aW9uQmFySGlkZGVuID0gdHJ1ZTtcclxuXHRcdHRoaXMucGFnZSA9IHBhZ2U7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcblx0XHQvLyBJbml0IHlvdXIgY29tcG9uZW50IHByb3BlcnRpZXMgaGVyZS5cclxuXHRcdHRoaXMudXVpZCA9IHRoaXMuX0FjdGl2YXRlZHJvdXRlLnNuYXBzaG90LnBhcmFtc1snaWQnXTtcclxuXHRcdHRoaXMuaWQgPSB0aGlzLl9BY3RpdmF0ZWRyb3V0ZS5zbmFwc2hvdC5wYXJhbXNbJ2lkMiddO1xyXG5cdFx0dGhpcy5kaXJlY3RvcnMgPSBhcHBTZXR0aW5ncy5nZXRTdHJpbmcoXCJkaXJlY3RvcnNcIiwgXCJcIik7XHJcblx0XHRsZXQgZGlyZWN0b3JzT2JqO1xyXG5cdFx0dGhpcy5TdGFydFNlcnZpY2UucmVmcmVzaFN0YXR1cyh0aGlzLnV1aWQpLnN1YnNjcmliZShcclxuXHRcdFx0cmVzcG9uc2UgPT4ge1xyXG5cdFx0XHRcdHRoaXMuZGlyZWN0b3JzID0gcmVzcG9uc2VbJ2luY29ycG9yYXRpb24nXVswXS5kaXJlY3RvcnM7XHJcblx0XHRcdFx0dGhpcy5kaXJlY3RvcnNBcnIgPSBKU09OLnBhcnNlKHRoaXMuZGlyZWN0b3JzKTtcclxuXHRcdFx0XHR0aGlzLmZpcnN0TmFtZSA9IHRoaXMuZGlyZWN0b3JzQXJyW3RoaXMuaWRdLmZpcnN0TmFtZTtcclxuXHRcdFx0XHR0aGlzLmxhc3ROYW1lID0gdGhpcy5kaXJlY3RvcnNBcnJbdGhpcy5pZF0ubGFzdE5hbWU7XHJcblx0XHRcdFx0dGhpcy5lbWFpbCA9IHRoaXMuZGlyZWN0b3JzQXJyW3RoaXMuaWRdLmVtYWlsO1xyXG5cdFx0XHRcdHRoaXMuYWwxID0gdGhpcy5kaXJlY3RvcnNBcnJbdGhpcy5pZF0uYWwxO1xyXG5cdFx0XHRcdHRoaXMuYWwyID0gdGhpcy5kaXJlY3RvcnNBcnJbdGhpcy5pZF0uYWwyO1xyXG5cdFx0XHRcdHRoaXMuY2l0eSA9IHRoaXMuZGlyZWN0b3JzQXJyW3RoaXMuaWRdLmNpdHk7XHJcblx0XHRcdFx0dGhpcy5wb3N0YWwgPSB0aGlzLmRpcmVjdG9yc0Fyclt0aGlzLmlkXS5wb3N0YWw7XHJcblx0XHRcdFx0dGhpcy5jb3VudHJ5ID0gdGhpcy5kaXJlY3RvcnNBcnJbdGhpcy5pZF0uY291bnRyeTtcclxuXHRcdFx0XHR0aGlzLnN0YXRlID0gdGhpcy5kaXJlY3RvcnNBcnJbdGhpcy5pZF0uc3RhdGU7XHJcblx0XHRcdH0sXHJcblx0XHRcdGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKVxyXG5cdFx0KTtcclxuXHR9XHJcblxyXG59XHJcbiJdfQ==